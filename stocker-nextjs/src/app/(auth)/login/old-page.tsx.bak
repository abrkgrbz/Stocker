'use client';

import React, { useState } from 'react';
import { Form, Input, Button, Checkbox, message } from 'antd';
import { LockOutlined, MailOutlined, ArrowRightOutlined, BuildingOutlined } from '@ant-design/icons';
import { useAuth } from '@/lib/auth';
import { ApiService } from '@/lib/api';
import Link from 'next/link';
import Image from 'next/image';
import { motion, AnimatePresence } from 'framer-motion';

export default function LoginPage() {
  const [loading, setLoading] = useState(false);
  const [step, setStep] = useState<'email' | 'password'>('email');
  const [email, setEmail] = useState('');
  const [tenantInfo, setTenantInfo] = useState<{ name: string; subdomain: string } | null>(null);
  const { login } = useAuth();

  const onEmailSubmit = async (values: { email: string }) => {
    setLoading(true);
    try {
      const response = await ApiService.post<{
        success: boolean;
        data: {
          exists: boolean;
          tenant?: {
            id: string;
            name: string;
            code: string;
            logoUrl?: string;
            isActive: boolean;
          };
        };
      }>('/public/check-email', { email: values.email });

      if (!response.data.exists) {
        message.error('Bu email adresi sistemde kayıtlı değil!');
        return;
      }

      if (!response.data.tenant) {
        message.error('Email adresi bir organizasyona bağlı değil!');
        return;
      }

      if (!response.data.tenant.isActive) {
        message.error('Organizasyonunuz aktif değil. Lütfen yöneticinizle iletişime geçin.');
        return;
      }

      setEmail(values.email);
      setTenantInfo({
        name: response.data.tenant.name,
        subdomain: response.data.tenant.code
      });
      setStep('password');
      message.success(`${response.data.tenant.name} organizasyonuna hoş geldiniz!`);
    } catch (error: any) {
      message.error(error?.response?.data?.message || 'Email doğrulanırken bir hata oluştu');
    } finally {
      setLoading(false);
    }
  };

  const onPasswordSubmit = async (values: { password: string; remember?: boolean }) => {
    setLoading(true);
    try {
      await login({ email, password: values.password });
      message.success('Giriş başarılı!');
    } catch (error: any) {
      message.error(error?.response?.data?.message || 'Giriş yapılırken bir hata oluştu');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex relative overflow-hidden bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900">
      {/* Animated Background Elements */}
      <motion.div
        className="absolute top-20 left-20 w-72 h-72 bg-purple-500/20 rounded-full blur-3xl"
        animate={{
          scale: [1, 1.2, 1],
          opacity: [0.3, 0.5, 0.3],
        }}
        transition={{
          duration: 8,
          repeat: Infinity,
          ease: 'easeInOut',
        }}
      />
      <motion.div
        className="absolute bottom-20 right-20 w-96 h-96 bg-pink-500/20 rounded-full blur-3xl"
        animate={{
          scale: [1, 1.3, 1],
          opacity: [0.2, 0.4, 0.2],
        }}
        transition={{
          duration: 10,
          repeat: Infinity,
          ease: 'easeInOut',
          delay: 1,
        }}
      />

      {/* Left Side - Branding */}
      <div className="hidden lg:flex lg:w-1/2 flex-col justify-center items-center p-12 relative z-10">
        <motion.div
          initial={{ opacity: 0, x: -50 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center"
        >
          <Link href="/" className="inline-block mb-8">
            <motion.div
              whileHover={{ scale: 1.05 }}
              transition={{ duration: 0.3 }}
            >
              <Image
                src="/logo.svg"
                alt="Stocker Logo"
                width={120}
                height={150}
                className="brightness-0 invert mx-auto"
              />
            </motion.div>
          </Link>

          <AnimatePresence mode="wait">
            {step === 'email' ? (
              <motion.div
                key="email-branding"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
                transition={{ duration: 0.3 }}
              >
                <h1 className="text-5xl font-bold text-white mb-6">
                  Hoş Geldiniz!
                </h1>
                <p className="text-xl text-gray-300 mb-8 max-w-md">
                  Email adresinizle başlayın, organizasyonunuzu otomatik bulalım
                </p>
              </motion.div>
            ) : (
              <motion.div
                key="password-branding"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
                transition={{ duration: 0.3 }}
              >
                <div className="mb-6 inline-flex items-center gap-3 bg-white/10 px-6 py-3 rounded-full backdrop-blur-sm">
                  <BuildingOutlined className="text-2xl text-purple-400" />
                  <span className="text-2xl font-bold text-white">{tenantInfo?.name}</span>
                </div>
                <h1 className="text-4xl font-bold text-white mb-6">
                  Organizasyonu
                </h1>
                <p className="text-xl text-gray-300 mb-8 max-w-md">
                  Devam etmek için şifrenizi girin
                </p>
              </motion.div>
            )}
          </AnimatePresence>

          {/* Features */}
          <div className="space-y-4 text-left max-w-md">
            {[
              '✨ Gerçek zamanlı stok takibi',
              '📊 Detaylı analiz ve raporlama',
              '🔔 Akıllı bildirim sistemi',
              '🚀 Hızlı ve güvenli platform',
            ].map((feature, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                className="flex items-center gap-3 text-gray-200"
              >
                <div className="w-2 h-2 bg-purple-400 rounded-full" />
                <span>{feature}</span>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </div>

      {/* Right Side - Login Form */}
      <div className="w-full lg:w-1/2 flex items-center justify-center p-6 relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="w-full max-w-md"
        >
          {/* Mobile Logo */}
          <div className="lg:hidden text-center mb-8">
            <Link href="/">
              <Image
                src="/logo.svg"
                alt="Stocker Logo"
                width={80}
                height={100}
                className="brightness-0 invert mx-auto"
              />
            </Link>
          </div>

          <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-8 shadow-2xl border border-white/20">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-white mb-2">Giriş Yap</h2>
              <p className="text-gray-300">Hesabınıza erişin</p>
            </div>


            <AnimatePresence mode="wait">
              {step === 'email' ? (
                <motion.div
                  key="email-form"
                  initial={{ opacity: 0, x: 20 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -20 }}
                  transition={{ duration: 0.3 }}
                >
                  <Form
                    name="email"
                    onFinish={onEmailSubmit}
                    autoComplete="off"
                    layout="vertical"
                    requiredMark={false}
                  >
                    <Form.Item
                      name="email"
                      rules={[
                        { required: true, message: 'Lütfen email adresinizi girin!' },
                        { type: 'email', message: 'Geçerli bir email adresi girin!' },
                      ]}
                    >
                      <Input
                        prefix={<MailOutlined className="text-gray-400" />}
                        placeholder="Email adresiniz"
                        size="large"
                        autoComplete="email"
                        suppressHydrationWarning
                        className="h-12 bg-white/5 border-white/20 text-white placeholder:text-gray-400 hover:bg-white/10 focus:bg-white/10"
                      />
                    </Form.Item>

                    <Form.Item>
                      <Button
                        type="primary"
                        htmlType="submit"
                        loading={loading}
                        size="large"
                        block
                        icon={<ArrowRightOutlined />}
                        iconPosition="end"
                        className="h-12 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 border-0 font-semibold text-lg shadow-lg"
                      >
                        Devam Et
                      </Button>
                    </Form.Item>

                    <div className="text-center">
                      <span className="text-gray-300">Hesabınız yok mu? </span>
                      <Link href="/register" className="text-purple-400 hover:text-purple-300 font-semibold transition-colors">
                        Kayıt Olun
                      </Link>
                    </div>
                  </Form>
                </motion.div>
              ) : (
                <motion.div
                  key="password-form"
                  initial={{ opacity: 0, x: 20 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -20 }}
                  transition={{ duration: 0.3 }}
                >
                  <Form
                    name="password"
                    onFinish={onPasswordSubmit}
                    autoComplete="off"
                    layout="vertical"
                    requiredMark={false}
                  >
                    <div className="mb-4 p-3 bg-white/5 rounded-lg border border-white/10">
                      <div className="flex items-center gap-2 text-sm text-gray-300">
                        <MailOutlined />
                        <span>{email}</span>
                      </div>
                    </div>

                    <Form.Item
                      name="password"
                      rules={[{ required: true, message: 'Lütfen şifrenizi girin!' }]}
                    >
                      <Input.Password
                        prefix={<LockOutlined className="text-gray-400" />}
                        placeholder="Şifreniz"
                        size="large"
                        autoComplete="current-password"
                        suppressHydrationWarning
                        className="h-12 bg-white/5 border-white/20 text-white placeholder:text-gray-400 hover:bg-white/10 focus:bg-white/10"
                      />
                    </Form.Item>

                    <div className="flex justify-between items-center mb-6">
                      <Form.Item name="remember" valuePropName="checked" noStyle>
                        <Checkbox className="text-gray-300">Beni hatırla</Checkbox>
                      </Form.Item>
                      <Link href="/forgot-password" className="text-purple-400 hover:text-purple-300 transition-colors">
                        Şifremi Unuttum
                      </Link>
                    </div>

                    <Form.Item>
                      <Button
                        type="primary"
                        htmlType="submit"
                        loading={loading}
                        size="large"
                        block
                        className="h-12 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 border-0 font-semibold text-lg shadow-lg"
                      >
                        Giriş Yap
                      </Button>
                    </Form.Item>

                    <div className="text-center">
                      <Button
                        type="text"
                        onClick={() => {
                          setStep('email');
                          setEmail('');
                          setTenantInfo(null);
                        }}
                        className="text-gray-300 hover:text-white"
                      >
                        ← Farklı Email Kullan
                      </Button>
                    </div>
                  </Form>
                </motion.div>
              )}
            </AnimatePresence>
          </div>

          {/* Back to Home */}
          <div className="text-center mt-6">
            <Link href="/" className="text-gray-300 hover:text-white transition-colors inline-flex items-center gap-2">
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
              Ana Sayfaya Dön
            </Link>
          </div>
        </motion.div>
      </div>
    </div>
  );
}
