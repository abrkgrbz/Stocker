version: '3.8'

# Stocker Web Application
# Frontend React application - Built from source by Coolify

services:
  web:
    build:
      context: stocker-nextjs
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://api.stoocker.app
        - NEXT_PUBLIC_BASE_DOMAIN=stoocker.app
        - NEXT_PUBLIC_AUTH_DOMAIN=https://auth.stoocker.app
    container_name: stocker-web
    restart: unless-stopped
    # ports:  # Traefik üzerinden erişim, port açmaya gerek yok
    #   - "3000:80"
    environment:
      # Public environment variables (client-side)
      - NEXT_PUBLIC_API_URL=https://api.stoocker.app
      - NEXT_PUBLIC_BASE_DOMAIN=stoocker.app
      - NEXT_PUBLIC_AUTH_DOMAIN=https://auth.stoocker.app

      # Server-side only environment variables
      - API_INTERNAL_URL=http://api:5000
      - HMAC_SECRET=${HMAC_SECRET:-ChangeThisToASecure32CharacterOrLongerSecretKeyForProductionUse123!}
      - COOKIE_BASE_DOMAIN=stoocker.app

      # Node environment
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - coolify
    labels:
      # Standard labels
      - "com.stocker.service=web"
      - "com.stocker.tier=application"
      
      # Traefik configuration
      - "traefik.enable=true"
      - "traefik.docker.network=coolify"
      
      # Main domain HTTPS routing (stoocker.app and www)
      - "traefik.http.routers.web-main-secure.rule=Host(`stoocker.app`) || Host(`www.stoocker.app`)"
      - "traefik.http.routers.web-main-secure.entrypoints=https"
      - "traefik.http.routers.web-main-secure.tls=true"
      - "traefik.http.routers.web-main-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.web-main-secure.tls.domains[0].main=stoocker.app"
      - "traefik.http.routers.web-main-secure.tls.domains[0].sans=*.stoocker.app"
      - "traefik.http.routers.web-main-secure.service=web-service"
      - "traefik.http.routers.web-main-secure.priority=10"
      - "traefik.http.routers.web-main-secure.middlewares=www-redirect"
      
      # Main domain HTTP routing (redirect to HTTPS)
      - "traefik.http.routers.web-main.rule=Host(`stoocker.app`) || Host(`www.stoocker.app`)"
      - "traefik.http.routers.web-main.entrypoints=http"
      - "traefik.http.routers.web-main.middlewares=redirect-https"
      
      # Wildcard subdomain HTTPS routing for ALL tenants
      - "traefik.http.routers.web-wildcard-secure.rule=HostRegexp(`^{subdomain:[a-z0-9-]+}\\.stoocker\\.app$$`)"
      - "traefik.http.routers.web-wildcard-secure.entrypoints=https"
      - "traefik.http.routers.web-wildcard-secure.tls=true"
      - "traefik.http.routers.web-wildcard-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.web-wildcard-secure.service=web-service"
      - "traefik.http.routers.web-wildcard-secure.priority=5"
      - "traefik.http.routers.web-wildcard-secure.middlewares=tenant-headers"
      
      # Wildcard subdomain HTTP routing (redirect to HTTPS)
      - "traefik.http.routers.web-wildcard.rule=HostRegexp(`^{subdomain:[a-z0-9-]+}\\.stoocker\\.app$$`)"
      - "traefik.http.routers.web-wildcard.entrypoints=http"
      - "traefik.http.routers.web-wildcard.middlewares=redirect-https"
      
      # Service configuration
      - "traefik.http.services.web-service.loadbalancer.server.port=3000"
      - "traefik.http.services.web-service.loadbalancer.passhostheader=true"
      
      # Middlewares
      # HTTPS redirect
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      
      # WWW to non-WWW redirect
      - "traefik.http.middlewares.www-redirect.redirectregex.regex=^https://www\\.(.*)"
      - "traefik.http.middlewares.www-redirect.redirectregex.replacement=https://$$1"
      - "traefik.http.middlewares.www-redirect.redirectregex.permanent=true"
      
      # Tenant detection middleware
      - "traefik.http.middlewares.tenant-headers.headers.customrequestheaders.X-Tenant-Slug={subdomain}"
      - "traefik.http.middlewares.tenant-headers.headers.customrequestheaders.X-Tenant-Host={subdomain}.stoocker.app"

networks:
  coolify:
    external: true