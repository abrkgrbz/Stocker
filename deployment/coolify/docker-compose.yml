version: '3.8'

services:
  # Frontend (React)
  stocker-web:
    build:
      context: ../../stocker-web
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=https://api.stocker.app
      - VITE_SIGNALR_URL=https://api.stocker.app/hubs
    labels:
      # Traefik labels for wildcard subdomain
      - "traefik.enable=true"
      - "traefik.http.routers.stocker-web.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.stocker.app`)"
      - "traefik.http.routers.stocker-web.entrypoints=websecure"
      - "traefik.http.routers.stocker-web.tls=true"
      - "traefik.http.routers.stocker-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.stocker-web.loadbalancer.server.port=3000"
      # Pass subdomain to the app
      - "traefik.http.middlewares.stocker-subdomain.headers.customrequestheaders.X-Tenant-Subdomain={subdomain}"
      - "traefik.http.routers.stocker-web.middlewares=stocker-subdomain"
    networks:
      - stocker-network

  # Backend API (.NET)
  stocker-api:
    build:
      context: ../..
      dockerfile: src/API/Stocker.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__MasterDatabase=Server=mssql;Database=StockerMasterDb;User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=true
      - DatabaseSettings__MasterConnectionString=Server=mssql;Database=StockerMasterDb;User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=true
      - DatabaseSettings__TenantConnectionStringTemplate=Server=mssql;Database=StockerTenant_{0};User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=true
      - JwtSettings__Secret=${JWT_SECRET}
      - JwtSettings__Issuer=https://api.stocker.app
      - JwtSettings__Audience=https://stocker.app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stocker-api.rule=Host(`api.stocker.app`)"
      - "traefik.http.routers.stocker-api.entrypoints=websecure"
      - "traefik.http.routers.stocker-api.tls=true"
      - "traefik.http.routers.stocker-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.stocker-api.loadbalancer.server.port=5000"
      # CORS headers
      - "traefik.http.middlewares.stocker-cors.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.stocker-cors.headers.accesscontrolalloworiginlist=https://*.stocker.app"
      - "traefik.http.middlewares.stocker-cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.stocker-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.stocker-cors.headers.addvaryheader=true"
      - "traefik.http.routers.stocker-api.middlewares=stocker-cors"
    depends_on:
      - mssql
    networks:
      - stocker-network

  # MSSQL Database
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=Express
    volumes:
      - mssql_data:/var/opt/mssql
    ports:
      - "1433:1433"
    networks:
      - stocker-network

  # Redis for SignalR backplane
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - stocker-network

networks:
  stocker-network:
    driver: bridge

volumes:
  mssql_data:
  redis_data: