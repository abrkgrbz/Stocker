# Nginx configuration for Stocker multi-tenant SaaS
# This configuration handles wildcard subdomains

# Upstream for frontend
upstream stocker_frontend {
    server stocker-web:3000;
}

# Upstream for backend API
upstream stocker_api {
    server stocker-api:5000;
}

# API server
server {
    listen 80;
    listen 443 ssl http2;
    server_name api.stocker.app;

    # SSL certificates (managed by Coolify/Let's Encrypt)
    ssl_certificate /etc/nginx/ssl/stocker.app/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/stocker.app/privkey.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    location / {
        proxy_pass http://stocker_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SignalR hubs
    location /hubs {
        proxy_pass http://stocker_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }
}

# Wildcard subdomain server
server {
    listen 80;
    listen 443 ssl http2;
    server_name *.stocker.app;

    # SSL certificates (wildcard certificate)
    ssl_certificate /etc/nginx/ssl/stocker.app/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/stocker.app/privkey.pem;

    # Extract subdomain
    set $subdomain "";
    if ($host ~* ^([a-z0-9-]+)\.stocker\.app$) {
        set $subdomain $1;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    location / {
        proxy_pass http://stocker_frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass subdomain to the application
        proxy_set_header X-Tenant-Subdomain $subdomain;
        proxy_set_header X-Tenant-Code $subdomain;
    }

    # API proxy for tenant-specific requests
    location /api {
        proxy_pass http://stocker_api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass subdomain to the API
        proxy_set_header X-Tenant-Subdomain $subdomain;
        proxy_set_header X-Tenant-Code $subdomain;
    }
}

# Main domain (www or non-www)
server {
    listen 80;
    listen 443 ssl http2;
    server_name stocker.app www.stocker.app;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/stocker.app/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/stocker.app/privkey.pem;

    # Redirect to www if accessed without www
    if ($host = stocker.app) {
        return 301 https://www.stocker.app$request_uri;
    }

    location / {
        proxy_pass http://stocker_frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name .stocker.app;
    return 301 https://$host$request_uri;
}