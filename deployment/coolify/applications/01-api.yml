version: '3.8'

# Stocker API - Production Configuration for Coolify
# All environment variables are properly structured based on API configuration

services:
  api:
    build:
      context: .
      dockerfile: ./src/API/Stocker.API/Dockerfile
    container_name: stocker-api
    restart: unless-stopped
    environment:
      # ==================================
      # ASPNETCORE CONFIGURATION
      # ==================================
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_SWAGGER_ENABLED=true
      
      # ==================================
      # DATABASE CONNECTIONS
      # ==================================
      # These are injected by Coolify at runtime
      - ConnectionStrings__MasterConnection
      - ConnectionStrings__TenantConnection
      - ConnectionStrings__DefaultConnection
      
      # ==================================
      # LOGGING (SEQ)
      # ==================================
      - Logging__Seq__ServerUrl=https://seq.stoocker.app
      - Logging__Seq__ApiKey=${SEQ_API_KEY}
      - Logging__Seq__MinimumLevel=Information
      
      # ==================================
      # JWT AUTHENTICATION
      # ==================================
      - JwtSettings__Secret=${JWT_SECRET}
      - JwtSettings__Issuer=Stocker
      - JwtSettings__Audience=Stocker
      - JwtSettings__AccessTokenExpirationMinutes=60
      - JwtSettings__RefreshTokenExpirationDays=7
      
      # ==================================
      # EMAIL SETTINGS
      # ==================================
      - EmailSettings__SmtpHost=mail.privateemail.com
      - EmailSettings__SmtpPort=465
      - EmailSettings__SmtpUsername=${SMTP_USERNAME}
      - EmailSettings__SmtpPassword=${SMTP_PASSWORD}
      - EmailSettings__FromEmail=info@stoocker.app
      - EmailSettings__FromName=Stoocker
      - EmailSettings__EnableSsl=true
      - EmailSettings__UseStartTls=false
      - EmailSettings__EnableEmail=true
      - EmailSettings__BaseUrl=https://stoocker.app
      - EmailSettings__TemplatesPath=EmailTemplates
      
      # ==================================
      # STORAGE (MINIO)
      # ==================================
      - Storage__Provider=MinIO
      - Storage__MinIO__Endpoint=minio:9000
      - Storage__MinIO__AccessKey=${MINIO_ROOT_USER}
      - Storage__MinIO__SecretKey=${MINIO_ROOT_PASSWORD}
      - Storage__MinIO__BucketName=stocker-files
      - Storage__MinIO__UseSSL=false
      - Storage__MinIO__PublicEndpoint=https://s3.stoocker.app
      
      # ==================================
      # REDIS CACHE
      # ==================================
      - Redis__ConnectionString=redis:6379
      - Redis__Password=${REDIS_PASSWORD}
      - Redis__DefaultDatabase=0
      - Redis__ConnectTimeout=5000
      - Redis__SyncTimeout=5000
      
      # ==================================
      # HANGFIRE BACKGROUND JOBS
      # ==================================
      - Hangfire__DashboardPath=/hangfire
      - Hangfire__ServerName=Stocker-Server
      - Hangfire__WorkerCount=4
      - Hangfire__Queues=critical,default,low
      - Hangfire__RetryAttempts=3
      # Hangfire connection injected by Coolify at runtime
      - Hangfire__ConnectionString
      - ConnectionStrings__HangfireConnection
      
      # ==================================
      # PASSWORD POLICY
      # ==================================
      - PasswordPolicy__MinimumLength=8
      - PasswordPolicy__MaximumLength=128
      - PasswordPolicy__RequireUppercase=true
      - PasswordPolicy__RequireLowercase=true
      - PasswordPolicy__RequireDigit=true
      - PasswordPolicy__RequireNonAlphanumeric=true
      - PasswordPolicy__RequiredUniqueChars=4
      - PasswordPolicy__PreventCommonPasswords=true
      - PasswordPolicy__PreventUserInfoInPassword=true
      - PasswordPolicy__PasswordHistoryCount=5
      - PasswordPolicy__PasswordExpirationDays=90
      - PasswordPolicy__MaxFailedAccessAttempts=5
      - PasswordPolicy__LockoutDurationMinutes=15
      - PasswordPolicy__MinimumStrengthScore=3
      
      # ==================================
      # SECURITY HEADERS
      # ==================================
      - SecurityHeaders__AddXContentTypeOptions=true
      - SecurityHeaders__AddXFrameOptions=true
      - SecurityHeaders__XFrameOptionsValue=DENY
      - SecurityHeaders__AddXXssProtection=true
      - SecurityHeaders__AddReferrerPolicy=true
      - SecurityHeaders__ReferrerPolicyValue=strict-origin-when-cross-origin
      - SecurityHeaders__AddContentSecurityPolicy=true
      - SecurityHeaders__AddStrictTransportSecurity=true
      - SecurityHeaders__HstsMaxAge=31536000
      - SecurityHeaders__HstsIncludeSubDomains=true
      - SecurityHeaders__HstsPreload=false
      
      # ==================================
      # RATE LIMITING
      # ==================================
      - TenantRateLimiting__Algorithm=SlidingWindow
      - TenantRateLimiting__PermitLimit=100
      - TenantRateLimiting__WindowSeconds=60
      - TenantRateLimiting__QueueLimit=5
      - TenantRateLimiting__SegmentsPerWindow=4
      - TenantRateLimiting__TokensPerPeriod=10
      - TenantRateLimiting__ReplenishmentPeriodSeconds=1
      
    networks:
      - coolify
    labels:
      # Traefik configuration for api.stoocker.app
      - "traefik.enable=true"
      - "traefik.docker.network=coolify"
      
      # API routing - HTTPS
      - "traefik.http.routers.api-secure.rule=Host(`api.stoocker.app`)"
      - "traefik.http.routers.api-secure.entrypoints=https"
      - "traefik.http.routers.api-secure.tls=true"
      - "traefik.http.routers.api-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api-secure.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=5000"
      
      # API routing - HTTP (redirect to HTTPS)
      - "traefik.http.routers.api.rule=Host(`api.stoocker.app`)"
      - "traefik.http.routers.api.entrypoints=http"
      - "traefik.http.routers.api.middlewares=redirect-to-https"
      
      # Middlewares
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      
      # CORS headers for wildcard subdomains using regex
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowheaders=Content-Type,Authorization,Accept,X-Request-ID,X-Tenant-Code,X-Correlation-ID,Cache-Control,Pragma"
      # Use regex pattern to match all *.stoocker.app subdomains
      - "traefik.http.middlewares.api-cors.headers.accesscontrolalloworiginlistregex=^https://([a-zA-Z0-9-]+\\.)?stoocker\\.app$$"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.api-cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowcredentials=true"
      
      # Apply CORS to HTTPS router
      - "traefik.http.routers.api-secure.middlewares=api-cors"
      
      # Coolify labels
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=stocker-api"
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  coolify:
    external: true
    # Force rebuild - 14 Eki 2025 Sal 16:05:47
