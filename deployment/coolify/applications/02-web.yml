version: '3.8'

# Stocker Web Application
# Frontend React application - Built from source by Coolify

services:
  web:
    # Option 1: Use pre-built image (fastest)
    # image: ghcr.io/yourusername/stocker-web:latest
    
    # Option 2: Build from GitHub
    # build:
    #   context: https://github.com/abrkgrbz/Stocker.git#main
    #   dockerfile: stocker-web/Dockerfile
    
    # Option 3: For Coolify - use root context
    build:
      context: .
      dockerfile: stocker-web/Dockerfile
    container_name: stocker-web
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=https://api.stoocker.app
      - VITE_APP_URL=https://stoocker.app
      - VITE_MOCK_ENABLED=false
      - VITE_SEQ_URL=https://seq.stoocker.app
      - VITE_MINIO_URL=https://s3.stoocker.app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - coolify
    labels:
      # Standard labels
      - "com.stocker.service=web"
      - "com.stocker.tier=application"
      
      # Traefik configuration
      - "traefik.enable=true"
      - "traefik.docker.network=coolify"
      
      # Main domain routing (stoocker.app and www)
      - "traefik.http.routers.web-main.rule=Host(`stoocker.app`) || Host(`www.stoocker.app`)"
      - "traefik.http.routers.web-main.entrypoints=https"
      - "traefik.http.routers.web-main.tls=true"
      - "traefik.http.routers.web-main.tls.certresolver=letsencrypt"
      - "traefik.http.routers.web-main.service=web-service"
      - "traefik.http.routers.web-main.priority=10"
      
      # Wildcard subdomain routing for ALL tenants
      - "traefik.http.routers.web-wildcard.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.stoocker.app`)"
      - "traefik.http.routers.web-wildcard.entrypoints=https"
      - "traefik.http.routers.web-wildcard.tls=true"
      - "traefik.http.routers.web-wildcard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.web-wildcard.service=web-service"
      - "traefik.http.routers.web-wildcard.priority=5"
      
      # Service configuration
      - "traefik.http.services.web-service.loadbalancer.server.port=80"
      - "traefik.http.services.web-service.loadbalancer.passhostheader=true"
      
      # WWW to non-WWW redirect
      - "traefik.http.middlewares.www-redirect.redirectregex.regex=^https://www.(.*)"
      - "traefik.http.middlewares.www-redirect.redirectregex.replacement=https://$$1"
      - "traefik.http.middlewares.www-redirect.redirectregex.permanent=true"
      - "traefik.http.routers.web-main.middlewares=www-redirect"
      
      # Tenant detection middleware
      - "traefik.http.middlewares.tenant-headers.headers.customrequestheaders.X-Tenant-Slug={subdomain}"
      - "traefik.http.routers.web-wildcard.middlewares=tenant-headers"

networks:
  coolify:
    external: true