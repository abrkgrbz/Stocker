version: '3.8'

# Stocker Web Application
# Frontend React application - Built from source by Coolify

services:
  web:
    build:
      context: .
      dockerfile: stocker-web/Dockerfile
    container_name: stocker-web
    restart: unless-stopped
    # ports:  # Traefik üzerinden erişim, port açmaya gerek yok
    #   - "3000:80"
    environment:
      - VITE_API_URL=https://api.stoocker.app
      - VITE_APP_URL=https://stoocker.app
      - VITE_MOCK_ENABLED=false
      - VITE_SEQ_URL=https://seq.stoocker.app
      - VITE_MINIO_URL=https://s3.stoocker.app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - coolify
    labels:
      # Standard labels
      - "com.stocker.service=web"
      - "com.stocker.tier=application"
      
      # Traefik configuration
      - "traefik.enable=true"
      - "traefik.docker.network=coolify"
      
      # Main domain HTTPS routing (stoocker.app and www)
      - "traefik.http.routers.stocker-web-main.rule=Host(`stoocker.app`) || Host(`www.stoocker.app`)"
      - "traefik.http.routers.stocker-web-main.entrypoints=https"
      - "traefik.http.routers.stocker-web-main.tls=true"
      - "traefik.http.routers.stocker-web-main.tls.certresolver=letsencrypt"
      - "traefik.http.routers.stocker-web-main.service=stocker-web-service"
      - "traefik.http.routers.stocker-web-main.priority=50"
      - "traefik.http.routers.stocker-web-main.middlewares=www-redirect"
      
      # Main domain HTTP routing (redirect to HTTPS)
      - "traefik.http.routers.stocker-web-main-http.rule=Host(`stoocker.app`) || Host(`www.stoocker.app`)"
      - "traefik.http.routers.stocker-web-main-http.entrypoints=http"
      - "traefik.http.routers.stocker-web-main-http.middlewares=redirect-https"
      
      # Wildcard subdomain HTTPS routing for ALL tenants
      - "traefik.http.routers.stocker-web-wildcard.rule=HostRegexp(`{subdomain:[a-z0-9][a-z0-9-]*}.stoocker.app`)"
      - "traefik.http.routers.stocker-web-wildcard.entrypoints=https"
      - "traefik.http.routers.stocker-web-wildcard.tls=true"
      - "traefik.http.routers.stocker-web-wildcard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.stocker-web-wildcard.service=stocker-web-service"
      - "traefik.http.routers.stocker-web-wildcard.priority=1"
      - "traefik.http.routers.stocker-web-wildcard.middlewares=tenant-headers"
      
      # Wildcard subdomain HTTP routing (redirect to HTTPS)
      - "traefik.http.routers.stocker-web-wildcard-http.rule=HostRegexp(`{subdomain:[a-z0-9][a-z0-9-]*}.stoocker.app`)"
      - "traefik.http.routers.stocker-web-wildcard-http.entrypoints=http"
      - "traefik.http.routers.stocker-web-wildcard-http.middlewares=redirect-https"
      
      # Service configuration
      - "traefik.http.services.stocker-web-service.loadbalancer.server.port=80"
      - "traefik.http.services.stocker-web-service.loadbalancer.passhostheader=true"
      
      # Middlewares
      # HTTPS redirect
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      
      # WWW to non-WWW redirect
      - "traefik.http.middlewares.www-redirect.redirectregex.regex=^https://www\\.(.*)$"
      - "traefik.http.middlewares.www-redirect.redirectregex.replacement=https://$${1}"
      - "traefik.http.middlewares.www-redirect.redirectregex.permanent=true"
      
      # Tenant detection middleware
      - "traefik.http.middlewares.tenant-headers.headers.customrequestheaders.X-Tenant-Slug={subdomain}"
      - "traefik.http.middlewares.tenant-headers.headers.customrequestheaders.X-Tenant-Host={subdomain}.stoocker.app"

networks:
  coolify:
    external: true