# RabbitMQ Management - rabbitmq.stoocker.app
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name rabbitmq.stoocker.app;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/stoocker.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stoocker.app/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/stoocker.app/chain.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Logs
    access_log /var/log/nginx/rabbitmq.stoocker.app.access.log;
    error_log /var/log/nginx/rabbitmq.stoocker.app.error.log;

    location / {
        proxy_pass http://rabbitmq:15672;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
    }
}

# Kibana - kibana.stoocker.app
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name kibana.stoocker.app;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/stoocker.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stoocker.app/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/stoocker.app/chain.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Logs
    access_log /var/log/nginx/kibana.stoocker.app.access.log;
    error_log /var/log/nginx/kibana.stoocker.app.error.log;

    location / {
        proxy_pass http://kibana:5601;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Seq - seq.stoocker.app
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name seq.stoocker.app;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/stoocker.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stoocker.app/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/stoocker.app/chain.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Logs
    access_log /var/log/nginx/seq.stoocker.app.access.log;
    error_log /var/log/nginx/seq.stoocker.app.error.log;

    location / {
        proxy_pass http://seq:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
    }
}

# Mailhog - mail.stoocker.app (Development/Staging only)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mail.stoocker.app;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/stoocker.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stoocker.app/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/stoocker.app/chain.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Basic authentication for development environment
    auth_basic "Mailhog Development";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Logs
    access_log /var/log/nginx/mail.stoocker.app.access.log;
    error_log /var/log/nginx/mail.stoocker.app.error.log;

    location / {
        proxy_pass http://mailhog:8025;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
    }
}