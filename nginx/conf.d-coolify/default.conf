# Listen on port 8090 for HTTP traffic from Traefik
server {
    listen 8090 default_server;
    listen [::]:8090 default_server;
    server_name _;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Catch-all server block
    location / {
        # Get the original host from Traefik
        set $original_host $http_x_forwarded_host;
        if ($original_host = '') {
            set $original_host $host;
        }

        # Route based on hostname
        if ($original_host ~ ^(www\.)?stoocker\.app$) {
            proxy_pass http://web_frontend;
        }
        
        if ($original_host = api.stoocker.app) {
            proxy_pass http://api_backend;
        }
        
        if ($original_host = minio.stoocker.app) {
            proxy_pass http://minio:9001;
        }
        
        if ($original_host = s3.stoocker.app) {
            proxy_pass http://minio:9000;
        }
        
        if ($original_host = grafana.stoocker.app) {
            proxy_pass http://grafana:3000;
        }
        
        if ($original_host = prometheus.stoocker.app) {
            proxy_pass http://prometheus:9090;
        }
        
        if ($original_host = rabbitmq.stoocker.app) {
            proxy_pass http://rabbitmq:15672;
        }
        
        if ($original_host = kibana.stoocker.app) {
            proxy_pass http://kibana:5601;
        }
        
        if ($original_host = seq.stoocker.app) {
            proxy_pass http://seq:80;
        }
        
        if ($original_host = mail.stoocker.app) {
            proxy_pass http://mailhog:8025;
        }

        # Proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    }
}