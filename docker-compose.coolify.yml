version: '3.8'

services:
  # MSSQL Database
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: stocker-mssql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SA_PASSWORD}
      MSSQL_PID: ${MSSQL_PID:-Developer}
    volumes:
      - mssql_data:/var/opt/mssql
    ports:
      - "1433:1433" 
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'YourStrongPassword123!' -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stocker-api
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__MasterDb: "Server=mssql;Database=StockerMaster;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=true;MultipleActiveResultSets=true"
      JwtSettings__SecretKey: ${JWT_SECRET_KEY}
      EmailSettings__SmtpHost: ${SMTP_HOST:-smtp.gmail.com}
      EmailSettings__SmtpPort: ${SMTP_PORT:-587}
      EmailSettings__SmtpUser: ${SMTP_USER}
      EmailSettings__SmtpPassword: ${SMTP_PASSWORD}
      EmailSettings__FromEmail: ${FROM_EMAIL:-noreply@stocker.com}
      EmailSettings__FromName: ${FROM_NAME:-Stocker}
    depends_on:
      mssql:
        condition: service_healthy
    ports:
      - "${API_PORT:-5000}:80" 
    volumes:
      - ./logs:/app/logs
      - ./emails:/app/emails
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

   

volumes:
  mssql_data:
    driver: local