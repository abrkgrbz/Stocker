version: '3.8'

services:
  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    container_name: stocker-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      # Only mount data, not config
      - prometheus_data:/prometheus
    networks:
      - stocker-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: stocker-grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3005:3000"
    environment:
      # Admin credentials
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-StockerGrafana2024!}
      # Server configuration
      - GF_SERVER_ROOT_URL=https://grafana.stoocker.app
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      # Database (using SQLite by default)
      - GF_DATABASE_TYPE=sqlite3
      # Authentication
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      # SMTP Configuration (optional)
      - GF_SMTP_ENABLED=${GRAFANA_SMTP_ENABLED:-false}
      - GF_SMTP_HOST=${SMTP_HOST:-smtp.sendgrid.net:587}
      - GF_SMTP_USER=${SMTP_USERNAME:-apikey}
      - GF_SMTP_PASSWORD=${SENDGRID_API_KEY:-}
      - GF_SMTP_FROM_ADDRESS=${FROM_EMAIL:-alerts@stoocker.app}
      - GF_SMTP_FROM_NAME=Stocker Alerts
      # Install plugins
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
    volumes:
      # Only mount data, not config
      - grafana_data:/var/lib/grafana
    networks:
      - stocker-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Node Exporter for host metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: stocker-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - stocker-network

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: stocker-cadvisor
    restart: unless-stopped
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - stocker-network

  # AlertManager for handling alerts
  alertmanager:
    build:
      context: ./alertmanager
      dockerfile: Dockerfile
    container_name: stocker-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      # Only mount data, not config
      - alertmanager_data:/alertmanager
    networks:
      - stocker-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local

networks:
  stocker-network:
    external: true