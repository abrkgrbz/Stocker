# ===============================================
# NGINX WITH COOLIFY TRAEFIK INTEGRATION
# ===============================================
# This configuration works alongside Coolify's Traefik
# Nginx runs on alternative ports (8080/8443)
# Traefik handles SSL and routes to Nginx
# ===============================================

version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: stocker-nginx
    restart: unless-stopped
    ports:
      # Alternative ports to avoid conflict with Traefik
      - "8090:8090"   # HTTP (internal)
      - "8453:8453"   # HTTPS (internal)
    environment:
      - NGINX_HTTP_PORT=8090
      - NGINX_HTTPS_PORT=8453
    volumes:
      # Nginx configuration
      - ./nginx/nginx-coolify.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d-coolify:/etc/nginx/conf.d:ro
      - ./nginx/snippets:/etc/nginx/snippets:ro
      # Self-signed certs for internal HTTPS (optional)
      - ./nginx/certs:/etc/nginx/certs:ro
      # Logs
      - ./nginx/logs:/var/log/nginx
      # Static files cache
      - nginx_cache:/var/cache/nginx
    networks:
      - stocker-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      # Coolify/Traefik labels for routing
      - "traefik.enable=true"
      - "traefik.docker.network=stocker-network"
      
      # Main app routing
      - "traefik.http.routers.nginx-main.rule=Host(`stoocker.app`) || Host(`www.stoocker.app`)"
      - "traefik.http.routers.nginx-main.entrypoints=websecure"
      - "traefik.http.routers.nginx-main.tls=true"
      - "traefik.http.routers.nginx-main.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-main.loadbalancer.server.port=8090"
      
      # API routing
      - "traefik.http.routers.nginx-api.rule=Host(`api.stoocker.app`)"
      - "traefik.http.routers.nginx-api.entrypoints=websecure"
      - "traefik.http.routers.nginx-api.tls=true"
      - "traefik.http.routers.nginx-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-api.loadbalancer.server.port=8090"
      
      # MinIO Console
      - "traefik.http.routers.nginx-minio.rule=Host(`minio.stoocker.app`)"
      - "traefik.http.routers.nginx-minio.entrypoints=websecure"
      - "traefik.http.routers.nginx-minio.tls=true"
      - "traefik.http.routers.nginx-minio.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-minio.loadbalancer.server.port=8090"
      
      # S3 API
      - "traefik.http.routers.nginx-s3.rule=Host(`s3.stoocker.app`)"
      - "traefik.http.routers.nginx-s3.entrypoints=websecure"
      - "traefik.http.routers.nginx-s3.tls=true"
      - "traefik.http.routers.nginx-s3.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-s3.loadbalancer.server.port=8090"
      
      # Grafana
      - "traefik.http.routers.nginx-grafana.rule=Host(`grafana.stoocker.app`)"
      - "traefik.http.routers.nginx-grafana.entrypoints=websecure"
      - "traefik.http.routers.nginx-grafana.tls=true"
      - "traefik.http.routers.nginx-grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-grafana.loadbalancer.server.port=8090"
      
      # Other services...
      - "traefik.http.routers.nginx-rabbitmq.rule=Host(`rabbitmq.stoocker.app`)"
      - "traefik.http.routers.nginx-rabbitmq.entrypoints=websecure"
      - "traefik.http.routers.nginx-rabbitmq.tls=true"
      - "traefik.http.routers.nginx-rabbitmq.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-rabbitmq.loadbalancer.server.port=8090"
      
      - "traefik.http.routers.nginx-kibana.rule=Host(`kibana.stoocker.app`)"
      - "traefik.http.routers.nginx-kibana.entrypoints=websecure"
      - "traefik.http.routers.nginx-kibana.tls=true"
      - "traefik.http.routers.nginx-kibana.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-kibana.loadbalancer.server.port=8090"
      
      - "traefik.http.routers.nginx-seq.rule=Host(`seq.stoocker.app`)"
      - "traefik.http.routers.nginx-seq.entrypoints=websecure"
      - "traefik.http.routers.nginx-seq.tls=true"
      - "traefik.http.routers.nginx-seq.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx-seq.loadbalancer.server.port=8090"

volumes:
  nginx_cache:
    driver: local

networks:
  stocker-network:
    external: true