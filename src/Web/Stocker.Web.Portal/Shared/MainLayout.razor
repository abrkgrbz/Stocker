@inherits LayoutComponentBase
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Stocker Portal</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <div class="d-flex align-items-center">
                        @if (userInfo != null)
                        {
                            <span class="me-3">
                                Hoş geldiniz, @context.User.Identity?.Name!
                                @if (!string.IsNullOrEmpty(userInfo.TenantName))
                                {
                                    <small class="text-muted">(@userInfo.TenantName)</small>
                                }
                            </span>
                        }
                        else
                        {
                            <span class="me-3">Hoş geldiniz, @context.User.Identity?.Name!</span>
                        }
                        <button class="btn btn-sm btn-outline-secondary" @onclick="HandleLogout">
                            <i class="oi oi-account-logout"></i> Çıkış
                        </button>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div>
                        <a href="/login" class="btn btn-sm btn-primary me-2">Giriş Yap</a>
                        <a href="/register" class="btn btn-sm btn-outline-primary">Kayıt Ol</a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private UserInfo? userInfo;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                userInfo = await AuthService.GetCurrentUserAsync();
                StateHasChanged();
            }
            catch
            {
                // Prerendering hatası olabilir
            }
        }
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login", true);
    }
}
