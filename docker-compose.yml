version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: stocker-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-stocker}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-StockerPass123!}
      POSTGRES_DB: ${POSTGRES_DB:-stocker_master}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - stocker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-stocker}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: stocker-api
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__MasterDb: "Host=postgres;Database=stocker_master;Username=${POSTGRES_USER:-stocker};Password=${POSTGRES_PASSWORD:-StockerPass123!}"
      JwtSettings__SecretKey: ${JWT_SECRET_KEY:-YourSecretKeyMustBeLongerThan256Bits123456789}
      EmailSettings__SmtpHost: ${SMTP_HOST:-smtp.gmail.com}
      EmailSettings__SmtpPort: ${SMTP_PORT:-587}
      EmailSettings__SmtpUser: ${SMTP_USER}
      EmailSettings__SmtpPassword: ${SMTP_PASSWORD}
      EmailSettings__FromEmail: ${FROM_EMAIL:-noreply@stocker.com}
      EmailSettings__FromName: ${FROM_NAME:-Stocker}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5000:80"
    networks:
      - stocker-network
    volumes:
      - ./logs:/app/logs
      - ./emails:/app/emails

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: stocker-web
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:5000}
      VITE_SIGNALR_URL: ${VITE_SIGNALR_URL:-http://localhost:5000/hubs}
    depends_on:
      - api
    ports:
      - "3000:80"
    networks:
      - stocker-network

  # Admin Portal (Blazor)
  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    container_name: stocker-admin
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:80
      ApiSettings__BaseUrl: http://api:80
    depends_on:
      - api
    ports:
      - "5001:80"
    networks:
      - stocker-network

  # Portal (Blazor Server)
  portal:
    build:
      context: .
      dockerfile: Dockerfile.portal
    container_name: stocker-portal
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:80
      ApiSettings__BaseUrl: http://api:80
    depends_on:
      - api
    ports:
      - "5002:80"
    networks:
      - stocker-network

networks:
  stocker-network:
    driver: bridge

volumes:
  postgres_data: