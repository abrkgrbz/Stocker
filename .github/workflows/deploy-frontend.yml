name: Deploy Frontend

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'stocker-web/**'
      - '.github/workflows/deploy-frontend.yml'
  pull_request:
    branches:
      - master
      - main
    paths:
      - 'stocker-web/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: stocker-web/package-lock.json
    
    - name: Install dependencies
      working-directory: ./stocker-web
      run: npm ci
    
    - name: Run linter
      working-directory: ./stocker-web
      run: npm run lint || true
    
    - name: Run type check
      working-directory: ./stocker-web
      run: npm run type-check || true
    
    - name: Run tests
      working-directory: ./stocker-web
      run: npm test -- --passWithNoTests
    
    - name: Build application
      working-directory: ./stocker-web
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.API_BASE_URL }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: stocker-web/dist

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./stocker-web
        file: ./stocker-web/Dockerfile.production
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VITE_API_BASE_URL=${{ secrets.API_BASE_URL }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker stop stocker-frontend || true
          docker rm stocker-frontend || true
          docker run -d \
            --name stocker-frontend \
            --restart unless-stopped \
            -p 80:80 \
            -p 443:443 \
            -v /etc/letsencrypt:/etc/letsencrypt:ro \
            -v /var/www/certbot:/var/www/certbot:ro \
            -e VITE_API_BASE_URL=${{ secrets.API_BASE_URL }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          # Health check
          sleep 10
          curl -f http://localhost/health || exit 1
    
    - name: Notify deployment
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Frontend deployment ${{ job.status }}'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow